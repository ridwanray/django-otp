version: '3.9'

services:
  api: &api
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    image: dev-deploy
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app:/app
    ports:
      - '8000:8000'
    env_file:
      - ./.env
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    environment:
      - RABBITMQ_DEFAULT_USER=mquser
      - RABBITMQ_DEFAULT_PASS=mqpass
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

  celery:
    <<: *api
    command: celery -A core worker --loglevel=info
    ports: []
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - api 
      - rabbitmq

  celery-beat:
    <<: *api
    command: celery -A core beat -l info
    ports: []
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - celery
      - rabbitmq

  dashboard:
    <<: *api
    command: celery --broker=${RABBITMQ_URL} flower --port=5555
    ports:
      - '25559:5555'
    env_file:
      - ./.env
    depends_on:
      - api
      - celery
      - rabbitmq